#!/usr/bin/env python3

"""

bindsym $mod+Up              exec amixer -q sset Master 2%+ unmute
bindsym $mod+Down            exec amixer -q sset Master 2%- unmute
bindsym $mod+End             exec amixer -q set Master toggle; exec amixer -q set Headphone unmute; exec amixer -q set Speaker unmute # does not work proberbly
bindsym XF86AudioRaiseVolume exec amixer -q set Master 2dB+ unmute
bindsym XF86AudioLowerVolume exec amixer -q set Master 2dB- unmute
bindsym XF86AudioMute        exec amixer -q set Master toggle; exec amixer -q set Headphone unmute; exec amixer -q set Speaker unmute # does not work proberbly

"""

from subprocess import Popen, PIPE
import sys
import numpy
import re


def shell(cmd, shell=False):

    if shell:
        p = Popen(cmd, shell=True, stdin=PIPE, stdout=PIPE, stderr=PIPE)
    else:
        cmd = cmd.split()
        p = Popen(cmd, stdin=PIPE, stdout=PIPE, stderr=PIPE)

    output, err = p.communicate()
    return output

def update_sink(sink, change):
    if change == "mute":
        shell('pactl set-sink-volume {} 0%'.format(sink))
    else:
        shell('pactl set-sink-volume {} {}%'.format(sink, change))

def set_default_sink(sink):
    shell('pactl set-default-sink {}'.format(sink))

    # Set default sound volume to 30%
    # so it does not blow my head off
    change = "30"

if __name__ == "__main__":

    # shell('notify-send " " "volume changed"', shell=True)

    args = sys.argv[1:]

    if len(args) < 1:
        print("Not enough parameters")

    change = args[0]

    sinks = shell('pactl list short sinks').decode("utf8")
    sinks = sinks.split('\n')

    if len(sinks) == 2:
        sink = sinks[0].split("\t")[0]
        update_sink(sink, change)
        quit()

    pactl_info = shell('pactl info')
    pactl_info = pactl_info.split('\n')

    default_sink = pactl_info[12]

    sink = sinks[-2]
    sink = sink.split()
    sink = sink[0]

    if not "bluez" in default_sink:
        set_default_sink(sink)

    update_sink(sink, change)
